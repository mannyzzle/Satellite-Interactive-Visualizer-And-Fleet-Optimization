name: Update Satellites & Infographics

on:
  schedule:
    - cron: "0 6 * * *"  # Runs daily at 06:00 UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  update_db:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Env Vars
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "SPACETRACK_USER=${{ secrets.SPACETRACK_USER }}" >> $GITHUB_ENV
          echo "SPACETRACK_PASS=${{ secrets.SPACETRACK_PASS }}" >> $GITHUB_ENV

      - name: Build & Run Updater
        run: |
          docker build -t satellite-updater -f backend/Dockerfile.update ./backend
          docker run --rm \
            -e DB_HOST=$DB_HOST \
            -e DB_NAME=$DB_NAME \
            -e DB_USER=$DB_USER \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e SPACETRACK_USER=$SPACETRACK_USER \
            -e SPACETRACK_PASS=$SPACETRACK_PASS \
            satellite-updater

  generate_infographics:
    runs-on: ubuntu-latest
    needs: update_db

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python Dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install matplotlib seaborn pandas

      - name: Make Infographics Directory
        run: |
          mkdir -p backend/infographics

      - name: Generate Infographics
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: 5432
        run: |
          python -c "
          import os
          import pandas as pd
          from sqlalchemy import create_engine
          from backend.app.generate_infographics import filters, generate_infographics

          # âœ… Set up DB connection
          engine = create_engine(f'postgresql://{os.getenv('DB_USER')}:{os.getenv('DB_PASSWORD')}@{os.getenv('DB_HOST')}:{os.getenv('DB_PORT')}/{os.getenv('DB_NAME')}')

          # âœ… Fetch Top 20 Countries
          def get_top_20_countries():
              query = 'SELECT country, COUNT(*) as count FROM satellites WHERE country IS NOT NULL GROUP BY country ORDER BY count DESC LIMIT 20;'
              df = pd.read_sql(query, engine)
              return df['country'].tolist()

          top_countries = get_top_20_countries()

          print('ðŸ”„ Generating Infographics for all filters...')
          for f_name, f_condition in filters.items():
              generate_infographics(f_name, f_condition)

          print('ðŸ”„ Generating Infographics for Select Launch Years...')
          for year in range(1990, 2026):
              generate_infographics(f'Launch Year {year}', f'launch_year = {year}')

          print(f'ðŸ”„ Generating Infographics for Top 20 Countries: {top_countries}')
          for country in top_countries:
              generate_infographics(f'Country {country}', f'country = \"{country}\"')

          print('ðŸ”„ Generating Infographics for Launch Year (All)...')
          generate_infographics('Launch Year (All)', None)

          print('ðŸ”„ Generating Infographics for Country (All)...')
          generate_infographics('Country (All)', None)

          print('âœ… Infographics Generation Completed!')
          "

      - name: Commit & Push Updated Graphs
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add backend/infographics/*.png
          git commit -m "ðŸ“Š Auto-update satellite infographics (Daily)" || echo "No changes to commit"
          git push