name: Update Satellite Data & Generate Infographics

on:
    schedule:
      - cron: "0 6 * * *"  # Runs every day at 6 AM UTC
    workflow_dispatch:  # Allows manual trigger

jobs:
  update_satellites:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Debug GitHub Secrets
        run: |
          echo "üîç Checking Secrets..."
          if [[ -z "${{ secrets.SPACETRACK_USER }}" ]]; then
            echo "‚ùå SPACETRACK_USER is missing!"
            exit 1
          else
            echo "‚úÖ SPACETRACK_USER is set."
          fi

          if [[ -z "${{ secrets.SPACETRACK_PASS }}" ]]; then
            echo "‚ùå SPACETRACK_PASS is missing!"
            exit 1
          else
            echo "‚úÖ SPACETRACK_PASS is set."
          fi

      - name: Set Environment Variables
        run: |
          echo "SPACETRACK_USER=${{ secrets.SPACETRACK_USER }}" >> $GITHUB_ENV
          echo "SPACETRACK_PASS=${{ secrets.SPACETRACK_PASS }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_PORT=5432" >> $GITHUB_ENV

      - name: Verify Loaded Environment Variables
        run: |
          echo "üîç Verifying Environment Variables..."
          echo "SPACETRACK_USER=${SPACETRACK_USER}"
          echo "SPACETRACK_PASS=${SPACETRACK_PASS}"
          echo "DB_HOST=${DB_HOST}"
          echo "DB_NAME=${DB_NAME}"
          echo "DB_USER=${DB_USER}"

      - name: Build and Run Updater in Docker
        run: |
          docker build -t satellite-updater -f backend/Dockerfile.update ./backend
          docker run --rm \
            -e DB_HOST=$DB_HOST \
            -e DB_NAME=$DB_NAME \
            -e DB_USER=$DB_USER \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e DB_PORT=$DB_PORT \
            -e SPACETRACK_USER=$SPACETRACK_USER \
            -e SPACETRACK_PASS=$SPACETRACK_PASS \
            satellite-updater

  generate_infographics:
    runs-on: ubuntu-latest
    needs: update_satellites  # Ensure satellite data is updated before generating graphs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install matplotlib pandas seaborn

      - name: Generate Infographics
        run: |
          python backend/app/generate_infographics.py  # ‚úÖ Correct path

      - name: Commit and Push Updated Graphs
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add backend/infographics/*.png
          git commit -m "üìä Auto-update satellite infographics (Daily Update)" || echo "No changes to commit"
          git push
