name: Satellite Tasks Scheduler

on:
  schedule:
    - cron: '15 */6 * * *'  # Runs TLE Processor every 6 hours at minute 15
    - cron: '45 */8 * * *'  # Runs CDM Processor every 8 hours at minute 45
    - cron: '0 * * * *'  # Runs Fetch All every hour at minute 0
    - cron: '30 * * * *'  #  Fetches and stores recent launch data every hour at minute 30
  workflow_dispatch:  # Allows manual trigger from GitHub UI

env:
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: 5432
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}
  SPACETRACK_USER: ${{ secrets.SPACETRACK_USER }}
  SPACETRACK_PASS: ${{ secrets.SPACETRACK_PASS }}

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          docker build -t satellite_tasks_image -f backend/Updater.Dockerfile .

      - name: Save Docker Image as Artifact
        run: |
          docker save -o /tmp/satellite_tasks_image.tar satellite_tasks_image

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: satellite_tasks_image
          path: /tmp/satellite_tasks_image.tar

  tle_processor:
    needs: build_image
    runs-on: ubuntu-latest
    if: github.event.schedule == '15 */6 * * *' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: satellite_tasks_image
          path: /tmp

      - name: Load Docker Image
        run: docker load -i /tmp/satellite_tasks_image.tar

      - name: Run TLE Processor
        run: |
          docker run --rm \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=5432 \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e SPACETRACK_USER=${{ secrets.SPACETRACK_USER }} \
            -e SPACETRACK_PASS=${{ secrets.SPACETRACK_PASS }} \
            satellite_tasks_image python3 app/tle_processor.py

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: tle_logs
          path: backend/app/logs/tle_log.txt

  cdm:
    needs: build_image
    runs-on: ubuntu-latest
    if: github.event.schedule == '45 */8 * * *' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: satellite_tasks_image
          path: /tmp

      - name: Load Docker Image
        run: docker load -i /tmp/satellite_tasks_image.tar

      - name: Run CDM Processor
        run: |
          docker run --rm \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=5432 \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e SPACETRACK_USER=${{ secrets.SPACETRACK_USER }} \
            -e SPACETRACK_PASS=${{ secrets.SPACETRACK_PASS }} \
            satellite_tasks_image python3 app/cdm.py

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: cdm_logs
          path: backend/app/logs/cdm_log.txt

  fetch_all:
    needs: build_image
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 * * * *' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: satellite_tasks_image
          path: /tmp

      - name: Load Docker Image
        run: docker load -i /tmp/satellite_tasks_image.tar

      - name: Run Fetch All
        run: |
          docker run --rm \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=5432 \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e SPACETRACK_USER=${{ secrets.SPACETRACK_USER }} \
            -e SPACETRACK_PASS=${{ secrets.SPACETRACK_PASS }} \
            satellite_tasks_image python3 app/omni_low.py fetch_all


      - name: Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: fetch_all_logs
          path: backend/app/logs/fetch_all_log.txt
  


  fetch_launches:
    needs: build_image
    runs-on: ubuntu-latest
    if: github.event.schedule == '30 * * * *' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: satellite_tasks_image
          path: /tmp

      - name: Load Docker Image
        run: docker load -i /tmp/satellite_tasks_image.tar

      - name: Run Fetch Launches
        run: |
          docker run --rm \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=5432 \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            satellite_tasks_image python3 app/fetch_launches.py
